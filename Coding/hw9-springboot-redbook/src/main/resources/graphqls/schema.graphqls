type Query{
    # 接受一个 ID 参数，并返回一个 Post 类型的对象
    getPostById(id: ID): Post
    getAuthorById(is:ID): Author
}

type Post{
    # Post 类型定义了包含 id、title、description 和 content 字段的文章类型。每个字段具有特定的数据类型（ID、String），这些字段对应于文章的不同属性。
    id:ID
    title: String
    description: String
    content: String
}

type Author{
    # Post 类型定义了包含 id、title、description 和 content 字段的文章类型。每个字段具有特定的数据类型（ID、String），这些字段对应于文章的不同属性。
    id:ID
    name: String
}

type Mutation{
    # 接受 title、description 和 content 参数，并返回一个新创建的 Post 类型对象
    createPost(title:String!, description:String!, content:String!) : Post!
    createAuthor(name:String!) : Author!
}